name: CI/CD - Deploy .NET API to Windows VPS

on:
  push:
    branches:
      - dev

env:
  IMAGE_NAME: ghcr.io/doublenh25/aievent:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore Backend/AIEvent/AIEvent.sln

      - name: Build project
        run: dotnet build Backend/AIEvent/AIEvent.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test Backend/AIEvent/AIEvent.sln --configuration Release --no-build --verbosity normal

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: doublenh25
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build --no-cache -t $IMAGE_NAME -f Backend/AIEvent/src/AIEvent.API/Dockerfile Backend/AIEvent
          docker push $IMAGE_NAME


      
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: deployuser
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script_stop: true
          script: |
            echo "=== [DEBUG] Start PowerShell Deployment Script ==="
          
            powershell -Command "Write-Host 'Step 1: Creating temp docker config directory...'; mkdir C:\docker-temp-config -Force"
          
            powershell -Command "
              Write-Host 'Step 2: Logging into GHCR...';
              try {
                echo '${{ secrets.GHCR_TOKEN }}' | docker --config C:\docker-temp-config login ghcr.io -u doublenh25 --password-stdin
                if ($LASTEXITCODE -ne 0) { Write-Error 'Login failed'; exit 1 }
                Write-Host 'Login successful.'
              } catch {
                Write-Error 'Error during GHCR login'
                exit 1
              }
            "
          
            powershell -Command "
              Write-Host 'Step 3: Change directory to project...';
              Set-Location 'C:\Users\Administrator\Desktop\aievent'
              if (-not (Test-Path docker-compose.yml)) {
                Write-Error 'docker-compose.yml not found in C:\Users\Administrator\Desktop\aievent'
                exit 1
              }
              Write-Host 'Directory OK.'
            "
          
            powershell -Command "
              Write-Host 'Step 4: Stopping old containers...';
              docker-compose down -v
              if ($LASTEXITCODE -ne 0) { Write-Warning 'docker-compose down failed or nothing to stop.' }
            "
          
            powershell -Command "
              Write-Host 'Step 5: Removing old image...';
              docker rmi ghcr.io/doublenh25/aievent:latest -f
              if ($LASTEXITCODE -ne 0) { Write-Warning 'No existing image or failed to remove.' }
            "
          
            powershell -Command "
              Write-Host 'Step 6: Pulling new image...';
              docker --config C:\docker-temp-config pull ghcr.io/doublenh25/aievent:latest
              if ($LASTEXITCODE -ne 0) {
                Write-Error 'Failed to pull latest image'
                exit 1
              }
            "
          
            powershell -Command "
              Write-Host 'Step 7: Starting new containers...';
              docker-compose up -d --force-recreate --remove-orphans --renew-anon-volumes
              if ($LASTEXITCODE -ne 0) {
                Write-Error 'docker-compose up failed'
                exit 1
              }
            "
          
            powershell -Command "
              Write-Host 'Step 8: Cleaning up unused images...';
              docker image prune -f
            "
          
            echo "=== [DEBUG] Deployment Finished ==="
